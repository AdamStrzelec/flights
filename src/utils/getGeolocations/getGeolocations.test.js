import { getGeolocations } from './getGeolocations';

const mockedFlightParameters = [
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098',
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098',
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098',
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098',
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098',
    'B1309045309619N01642080EA0005700082',
    'B1309055309622N01642081EA0006400083',
    'B1309065309625N01642082EA0007200090',
    'B1309075309628N01642083EA0007900098'
  ]

test('display extracted geolocations', () => {
    expect(getGeolocations(mockedFlightParameters)[0].lat).toBe(53.09619);
});
test('display geolocations reduced length', () => {
    expect(getGeolocations(mockedFlightParameters).length).toBe(3);
});